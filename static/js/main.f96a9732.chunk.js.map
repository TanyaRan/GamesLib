{"version":3,"sources":["api.js","types/gamesTypes.js","components/Game.js","pages/Home.js","actions/gamesAction.js","components/GlobalStyles.js","App.js","reportWebVitals.js","reducers/gamesReducer.js","reducers/index.js","store.js","index.js"],"names":["baseUrl","currentYear","Date","getFullYear","currentMonth","month","getMonth","getCurrentMonth","currentDay","day","getDay","getCurrentDay","currentDate","lastYear","nextYear","popularGames","upcomingGames","newGames","FETCH_GAMES","StyledGame","styled","motion","div","Game","name","released","image","src","alt","GameList","Games","Home","dispatch","useDispatch","useEffect","a","axios","get","popularData","upcomingData","newData","type","payload","popular","data","results","upcoming","newest","useSelector","state","games","map","game","id","background_image","GlobalStyles","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","searched","gamesReducer","action","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f96a9732.chunk.js","sourcesContent":["// Base URL\nconst baseUrl = `https://api.rawg.io/api/games?key=f6be025439e4402fa456b90e2735dea4`\n\n// Getting the date\nconst getCurrentMonth = () => {\n  const month = new Date().getMonth() + 1\n\n  if (month < 10) {\n    return `0${month}`\n  } else {\n    return month\n  }\n}\n\nconst getCurrentDay = () => {\n  const day = new Date().getDay()\n\n  if (day < 10) {\n    return `0${day}`\n  } else {\n    return day\n  }\n}\n\n// Current day/month/year\nconst currentYear = new Date().getFullYear()\nconst currentMonth = getCurrentMonth()\nconst currentDay = getCurrentDay()\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`\n\n// Games\nconst popularGames = `&dates=${lastYear},${currentDate}&platforms=18,1,7&ordering=-rating&page_size=10`\nconst upcomingGames = `&dates=${currentDate},${nextYear}&platforms=18,1,7&ordering=-added&page_size=10`\nconst newGames = `&dates=${lastYear},${currentDate}&platforms=18,1,7&ordering=-released&page_size=10`\n\nexport const popularGamesUrl = () => `${baseUrl}${popularGames}`\n\nexport const upcomingGamesUrl = () => `${baseUrl}${upcomingGames}`\n\nexport const newGamesUrl = () => `${baseUrl}${newGames}`\n","export const FETCH_GAMES = 'FETCH_GAMES'\n","import React from 'react'\n// Styling and Animation\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nconst Game = ({ name, released, image }) => {\n  return (\n    <StyledGame>\n      <h3>{name}</h3>\n      <p>{released}</p>\n      <img src={image} alt={name} />\n    </StyledGame>\n  )\n}\n\nconst StyledGame = styled(motion.div)`\n  min-height: 30vh;\n  box-shadow: 0px 5px 20px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  border-radius: 0.5rem;\n  img {\n    width: 100%;\n    height: 40vh;\n    object-fit: cover;\n  }\n`\n\nexport default Game\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadGames } from '../actions/gamesAction'\nimport Game from '../components/Game'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\n\nconst Home = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(loadGames())\n  }, [dispatch])\n\n  // Get data from the store\n  const { popular, newest, upcoming } = useSelector(state => state.games)\n  // const { upcoming } = useSelector(state => state.games)\n\n  return (\n    <>\n      <GameList>\n        <h2>Upcoming Games</h2>\n        <Games>\n          {upcoming.map(game => (\n            <Game\n              key={game.id}\n              name={game.name}\n              id={game.id}\n              released={game.released}\n              image={game.background_image}\n            />\n          ))}\n        </Games>\n\n        <h2>Popular Games</h2>\n        <Games>\n          {popular.map(game => (\n            <Game\n              key={game.id}\n              name={game.name}\n              id={game.id}\n              released={game.released}\n              image={game.background_image}\n            />\n          ))}\n        </Games>\n\n        <h2>Newest Games</h2>\n        <Games>\n          {newest.map(game => (\n            <Game\n              key={game.id}\n              name={game.name}\n              id={game.id}\n              released={game.released}\n              image={game.background_image}\n            />\n          ))}\n        </Games>\n      </GameList>\n    </>\n  )\n}\n\nconst GameList = styled(motion.div)`\n  padding: 0rem 3rem;\n  h2 {\n    padding: 3rem 0rem;\n  }\n`\n\nconst Games = styled(motion.div)`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  grid-column-gap: 3rem;\n  grid-row-gap: 5rem;\n`\n\nexport default Home\n","import axios from 'axios'\nimport { popularGamesUrl, upcomingGamesUrl, newGamesUrl } from '../api'\nimport { FETCH_GAMES } from '../types/gamesTypes'\n\n// Action Creator\nexport const loadGames = () => async dispatch => {\n  const popularData = await axios.get(popularGamesUrl())\n  const upcomingData = await axios.get(upcomingGamesUrl())\n  const newData = await axios.get(newGamesUrl())\n\n  dispatch({\n    type: FETCH_GAMES,\n    payload: {\n      popular: popularData.data.results,\n      upcoming: upcomingData.data.results,\n      newest: newData.data.results\n    }\n  })\n}\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyles = createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  html {\n    &::-webkit-scrollbar {\n      width: 0.5rem;\n    }\n    &::-webkit-scrollbar-thumb {\n      background-color: darkgrey;\n    }\n  }\n  body {\n    font-family: 'Montserrat', sans-serif;\n    width: 100%;\n  }\n  h2 {\n    font-size: 3rem;\n    font-family: 'Abril Fatface', cursive;\n    font-weight: lighter;\n    color: #339;\n  }\n  h3 {\n    font-size: 1.3rem;\n    color: #555;\n    padding: 1.5rem;\n  }\n  p {\n    font-size: 1.2rem;\n    line-height: 200%;\n    color: #777;\n  }\n  a {\n    text-decoration: none;\n    color: #555;\n\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react'\nimport Home from './pages/Home'\nimport GlobalStyles from './components/GlobalStyles'\n\nfunction App() {\n  return (\n    <div>\n      <GlobalStyles />\n      <Home />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FETCH_GAMES } from '../types/gamesTypes'\n\nconst initState = {\n  popular: [],\n  newest: [],\n  upcoming: [],\n  searched: []\n}\n\nconst gamesReducer = (state = initState, action) => {\n  switch (action.type) {\n    case FETCH_GAMES:\n      return {\n        ...state,\n        popular: action.payload.popular,\n        newest: action.payload.newest,\n        upcoming: action.payload.upcoming\n      }\n    default:\n      return {\n        ...state\n      }\n  }\n}\n\nexport default gamesReducer\n","import { combineReducers } from 'redux'\nimport gamesReducer from './gamesReducer'\n\nconst rootReducer = combineReducers({\n  games: gamesReducer\n})\n\nexport default rootReducer\n","// REDUX SETUP\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}